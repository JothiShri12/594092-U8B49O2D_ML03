# -*- coding: utf-8 -*-
"""Random Forest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ue2YjwQw6a__Vusj2RWBfiKJ0ELTHYJW
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt # data visualization
import seaborn as sns # statistical data visualization
# %matplotlib inline

from google.colab import files
uploaded = files.upload()

import io
rf = pd.read_csv(io.BytesIO(uploaded['Crop_recommendation.csv']))
rf

rf.head()

rf.shape

rf.isnull().sum()

rf.info()

I=rf["label"].unique()

rf.head()

X=rf.iloc[:,:-1].values
X



y=rf.iloc[:,-1].values
y

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=50)

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
X_train=sc.fit_transform(X_train)
X_test=sc.transform(X_test)

from sklearn.ensemble import RandomForestClassifier
classifier=RandomForestClassifier(n_estimators=10,criterion='entropy',random_state=0)
classifier.fit(X_train,y_train)

y_pred=classifier.predict(X_test)

from sklearn.metrics import confusion_matrix
cm=confusion_matrix(y_test,y_pred)
cm

from sklearn import metrics
print('The accuracy of the Random forest is :',metrics.accuracy_score(y_pred,y_test))

rfc = RandomForestClassifier(n_estimators=900, 
                             max_depth=7,
                             random_state=50)
rfc.fit(X_train, y_train)
y_pred = rfc.predict(X_test)
cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt='d').set_title('Crop Prediction')